import pygame
import random
import os
import time
import neat
import sys
import math

pygame.init()

WIDTH = 500
HEIGHT = 600
Black = (0, 0, 0)
Blue = (152, 226, 249)

pygame.display.set_caption("FlappyBee")
screen = pygame.display.set_mode((WIDTH, HEIGHT))
BEE_IMG = pygame.transform.scale(pygame.image.load(os.path.join("imgs", "pszczola.png")).convert_alpha(), (500, 500))
BG = pygame.transform.scale(pygame.image.load(os.path.join("imgs", "tło.png")).convert_alpha(), (500, 600))
GROUND = pygame.transform.scale(pygame.image.load(os.path.join("imgs", "ground.png")).convert_alpha(), (500, 150))


def title(txt, x, y, size):
    cz = pygame.font.SysFont("Times New Roman", size)
    rend = cz.render(txt, 1, (123, 252, 0))
    x = (WIDTH - rend.get_rect().width) / 2
    y = (HEIGHT - rend.get_rect().height) / 4 * 3
    screen.blit(rend, (x, y))

    pygame.display.update()


def menu(txt, x, y, size):
    cz = pygame.font.SysFont("Times New Roman", size)
    rend = cz.render(txt, 1, (123, 252, 0))
    x = (WIDTH - rend.get_rect().width) / 2
    y = (HEIGHT - rend.get_rect().height) / 4*3
    screen.blit(rend, (x, y-50))

    pygame.display.update()


def menu1(txt, x, y, size):
    cz = pygame.font.SysFont("Times New Roman", size)
    rend = cz.render(txt, 1, (123, 252, 0))
    x = (WIDTH - rend.get_rect().width) / 2
    y = (HEIGHT - rend.get_rect().height) / 2
    screen.blit(rend, (x, y-75))

    pygame.display.update()


def logo():
    logo = pygame.image.load(os.path.join('logo.png'))
    screen.blit(logo, (-65, 150))

    pygame.display.update()


class Bee():
    ANIMATION_TIME = 5
    MAX_ROTATION = 25
    ROT_VEL = 20
    BEE = BEE_IMG

    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.tilt = 0
        self.tick_count = 0
        self.vel = 0
        self.height = self.y
        self.img_count = 0
        self.img = self.BEE
        
    def jump(self):
        self.vel = -11
        self.tick_count = 0
        self.height = self.y

    def move(self):
        self.tick_count += 1

        d = self.vel*self.tick_count + 1.5*self.tick_count**2

        if d >= 16:
           d = 16
        if d < 0:
            d -= 2

        self.y = self.y + d

        if d < 0 or self.y < self.height:
            if self.tilt < self.MAX_ROTATION:
                self.tilt = self.MAX_ROTATION
        else:
            if self.tilt > -90:
                self.tilt -= self.ROT_VEL

    def draw(self, screen):
        self.img_count += 1

        if self.img_count < self.ANIMATION_TIME:
            self.img = self.BEE
        elif self.img_count < self.ANIMATION_TIME*2:
            self.img = self.BEE
        elif self.img_count < self.ANIMATION_TIME*3:
            self.img = self.BEE
        elif self.img_count < self.ANIMATION_TIME*4:
            self.img = self.BEE
        elif self.img_count < self.ANIMATION_TIME*4 + 1:
            self.img = self.BEE
            self.img_count = 0

        rotated_image = pygame.transform.rotate(self.img, self.tilt)
        new_rect = rotated_image.get_rect(center=self.img.get_rect(topleft=(self.x, self.y)).center)
        screen.blit(rotated_image, new_rect.topleft)


class Ground:
    VEL = 5
    WIDTH = GROUND.get_width()
    IMG = GROUND

    def __init__(self, y):
        self.y = y
        self.x1 = 0
        self.x2 = self.WIDTH

    def move(self):
        self.x1 -= self.VEL
        self.x2 -= self.VEL

        if self.x1 + self.WIDTH < 0:
            self.x1 = self.x2 + self.WIDTH

        if self.x2 + self.WIDTH < 0:
            self.x2 = self.x1 + self.WIDTH

    def draw(self, screen):
        screen.blit(self.IMG, (self.x1, self.y))
        screen.blit(self.IMG, (self.x2, self.y))


def draw_window(screen, bee, ground):
    screen.blit(BG, (0, 0))
    bee.draw(screen)
    ground.draw(screen)
    pygame.display.update()
    

def main():
    bee = Bee(-15, 150)
    ground = Ground(450)
    run = True
    clock = pygame.time.Clock()
    
    while run:
        clock.tick(30)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bee.jump()

        draw_window(screen, bee, ground)
        ground.move()
        bee.move()
        pygame.display.update()


display = 'intro'

while True:

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_1:
                main()
            if event.key == pygame.K_2:
                screen.fill(Blue)
            if event.key == pygame.K_3:
                sys.exit()

    if display == 'intro':
        logo()
        title('Welcome to FLAPPYBEE by Marta Dzięgielewska!!!', 40, 100, 20)
        time.sleep(3)
        screen.fill(Black)
    display = 'menu'
    if display == 'menu':
        menu1("1. PLAY   2. Scoreboard   3. Exit", 40, 100, 20)
        menu("ENTER THE NUMBER FROM THE KEYBOARD", 40, 100, 20)
    elif display == "game":
        pygame.display.update()
